<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://yonas-g.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://yonas-g.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-27T12:33:31+00:00</updated><id>https://yonas-g.github.io/feed.xml</id><title type="html">blank</title><subtitle>Yonas&apos;s</subtitle><entry><title type="html">ArxivSpot - A daily digest of the latest arXiv papers</title><link href="https://yonas-g.github.io/blog/2024/arxiv_spot/" rel="alternate" type="text/html" title="ArxivSpot - A daily digest of the latest arXiv papers"/><published>2024-07-16T12:57:00+00:00</published><updated>2024-07-16T12:57:00+00:00</updated><id>https://yonas-g.github.io/blog/2024/arxiv_spot</id><content type="html" xml:base="https://yonas-g.github.io/blog/2024/arxiv_spot/"><![CDATA[<h2 id="arxivspot">ArxivSpot</h2> <p>ArxivSpot is a daily digest of the latest arXiv papers. It is a simple and easy way to keep up with the latest research in AI. Each day, ArxivSpot uses Github Actions to scrape the latest papers from arXiv and updates the <a href="https://yonas-g.github.io/arxiv">page</a> with the latest AI/ML papers.</p> <p>You can access the latest papers by visiting the <a href="https://yonas-g.github.io/arxiv">ArxivSpot page</a>.</p>]]></content><author><name></name></author><category term="arxiv"/><category term="general"/><summary type="html"><![CDATA[ArxivSpot - A daily digest of the latest arXiv papers]]></summary></entry><entry><title type="html">R-Squared Explained</title><link href="https://yonas-g.github.io/blog/2023/r_squared_explained/" rel="alternate" type="text/html" title="R-Squared Explained"/><published>2023-07-13T12:57:00+00:00</published><updated>2023-07-13T12:57:00+00:00</updated><id>https://yonas-g.github.io/blog/2023/r_squared_explained</id><content type="html" xml:base="https://yonas-g.github.io/blog/2023/r_squared_explained/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>In Progress</p>]]></content><author><name>Yonas Chanie</name></author><category term="machine-learning"/><category term="r_sqaured"/><category term="general"/><summary type="html"><![CDATA[R-Squared Explained]]></summary></entry><entry><title type="html">How to Run Jupyter Notebook on AWS EC2 Instance</title><link href="https://yonas-g.github.io/blog/2022/jupyter-notebook-on-aws/" rel="alternate" type="text/html" title="How to Run Jupyter Notebook on AWS EC2 Instance"/><published>2022-02-05T12:57:00+00:00</published><updated>2022-02-05T12:57:00+00:00</updated><id>https://yonas-g.github.io/blog/2022/jupyter-notebook-on-aws</id><content type="html" xml:base="https://yonas-g.github.io/blog/2022/jupyter-notebook-on-aws/"><![CDATA[<p>After creating EC2 instance follow the following steps to run a jupyter notebook. Jupyter notebook uses port 8888 to access the web interface. When you create the instance make sure to add port 8888 under security policy configurations before launching so that you will be able access your jupyter notebook later.</p> <h3 id="1-install-conda-miniconda">1. Install Conda (Miniconda)</h3> <p>From the official website <a href="https://docs.conda.io/en/latest/miniconda.html">https://docs.conda.io/en/latest/miniconda.html</a> find the right link based on your python version.</p> <p><img src="/assets/img/python_versions.png" alt="python-versions"/></p> <p>Copy the address link and download the setup file using</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    wget https://repo.anaconda.com/miniconda/Miniconda3-py38_4.11.0-Linux-x86_64.sh
</code></pre></div></div> <p>Run the setup</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nb">chmod</span> +x ./Miniconda3-py38_4.11.0-Linux-x86_64.sh <span class="o">&amp;&amp;</span> ./Miniconda3-py38_4.11.0-Linux-x86_64.sh
</code></pre></div></div> <h3 id="install-jupyter-lab">Install Jupyter Lab</h3> <p>Using conda install Jupyter lab using</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    conda <span class="nb">install</span> <span class="nt">-c</span> conda-forge jupyterlab
</code></pre></div></div> <p><strong>Setup password</strong></p> <p>Inside ~/.jupyter directory create a new file ` jupyter_server_config.py`</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nb">touch</span> .jupyter/jupyter_server_config.py
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    c.ServerApp.ip <span class="o">=</span> <span class="s1">'*'</span> <span class="c"># bind to any network interface</span>
    c.ServerApp.password <span class="o">=</span> u<span class="s1">'&lt;your hashed password here&gt;'</span>
    c.ServerApp.open_browser <span class="o">=</span> False
    c.ServerApp.port <span class="o">=</span> 8888 <span class="c"># or any other ports you'd like</span>
</code></pre></div></div> <p>To setup a jupyter password</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    jupyter server password
</code></pre></div></div> <p>The above command will ask you to enter a password. Once you’re done, you will get a json file with jupyter_server_config name. Copy the hashed password from this file and past it to ` jupyter_server_config.py`.</p> <p>You’re done! run jupyter lab and use your public ip to access your notebook.</p> <h2 id="attach-efs">Attach EFS</h2> <p>— attach EFS to the instance</p> <ol> <li> <p>Create efs You can go to AWS’s EFS and create an efs. This will allow you to store your important data even after you closed your EC2 instance</p> </li> <li> <p>Mount the efs After creating efs, you will find a button that says “Attach”. Click on it and you’ll find a command to execture on your terminal to attach the efs. But before that make sure to create <code class="language-plaintext highlighter-rouge">efs</code> folder in your instance.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>     <span class="nb">sudo </span>mount <span class="k">******</span>.amazonaws.com:/ efs
</code></pre></div> </div> </li> <li> <p>This is an optional command. It allows you to use the temporary storage instance available along with your EC2.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>     <span class="nb">sudo </span>mkfs <span class="nt">-t</span> xfs /dev/nvme1n1
</code></pre></div> </div> </li> <li> <p>Mount the storage</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>     <span class="nb">sudo mkdir</span> ~/data <span class="o">&amp;&amp;</span> <span class="nb">sudo </span>mount /dev/nvme1n1 ~/data
</code></pre></div> </div> </li> <li> <p>Allow read/write persmission</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>     <span class="nb">sudo chmod </span>go+rw data
</code></pre></div> </div> </li> <li> <p>Extract your data</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>     <span class="nb">tar</span> <span class="nt">-xf</span> efs/<span class="k">*</span>.tar <span class="o">&amp;&amp;</span> <span class="nb">source</span> .bashrc
</code></pre></div> </div> </li> </ol> <h2 id="all-combined">All Combined</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nb">mkdir </span>efs
    <span class="nb">sudo </span>mount <span class="k">***</span> .amazonaws.com:/ efs
    <span class="nb">sudo </span>mkfs <span class="nt">-t</span> xfs /dev/nvme1n1
    <span class="nb">sudo mkdir</span> ~/data <span class="o">&amp;&amp;</span> <span class="nb">sudo </span>mount /dev/nvme1n1 ~/data
    <span class="nb">sudo chmod </span>go+rw ~/data
    <span class="nb">tar</span> <span class="nt">-xf</span> efs/<span class="k">*</span>.tar <span class="o">&amp;&amp;</span> <span class="nb">source</span> .bashrc
</code></pre></div></div> <h2 id="persist-config-data-to-efs">Persist config data to EFS</h2> <p>If you want to store your data fter you’re done with your work;</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nb">sudo tar</span> <span class="nt">-cf</span> ~/efs/<span class="k">*</span>.tar ./miniconda3 .kaggle .ipython .jupyter .conda .bashrc
</code></pre></div></div> <h2 id="python-38">Python 3.8</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nb">sudo </span>apt <span class="nb">install </span>python3.8
    <span class="nb">sudo </span>update-alternatives <span class="nt">--install</span> /usr/bin/python python /usr/bin/python3.8.1
    <span class="nb">sudo </span>update-alternatives <span class="nt">--config</span> python
</code></pre></div></div> <p>Note: this note is adapted from https://chen-zhe.github.io/blog/p/aws-user-notes-for-deep-learning/</p>]]></content><author><name>Yonas Chanie</name></author><category term="jupyter-notebook"/><category term="aws"/><category term="general"/><summary type="html"><![CDATA[How to run jupyter notebook on AWS EC2 instance]]></summary></entry></feed>